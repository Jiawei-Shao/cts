{"version":3,"file":"frexp.spec.js","names":["description","makeTestGroup","GPUTest","anyOf","f32","i32","toVector","TypeF32","TypeI32","TypeVec","cartesianProduct","frexp","fullF32Range","isSubnormalNumberF32","quantizeToF32","vectorF32Range","makeCaseCache","allInputSources","basicExpressionBuilder","run","g","fractBuilder","value","expBuilder","makeVectorCaseFract","v","map","fs","e","result","fract","push","options","expected","o","input","makeVectorCaseExp","exp","d","f32_fract","makeCase","n","f32_exp","f32_vec2_fract","f32_vec2_exp","f32_vec3_fract","f32_vec3_exp","f32_vec4_fract","f32_vec4_exp","test","specURL","desc","params","u","combine","fn","t","cases","get","unimplemented"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/frexp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'frexp' builtin function\n\nS is f32 or f16\nT is S or vecN<S>\n\n@const fn frexp(e: T) -> result_struct\n\nSplits e into a significand and exponent of the form significand * 2^exponent.\nReturns the result_struct for the appropriate overload.\n\n\nThe magnitude of the significand is in the range of [0.5, 1.0) or 0.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { f32, i32, toVector, TypeF32, TypeI32, TypeVec } from '../../../../../util/conversion.js';\nimport {\n  cartesianProduct,\n  frexp,\n  fullF32Range,\n  isSubnormalNumberF32,\n  quantizeToF32,\n  vectorF32Range,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  basicExpressionBuilder,\n  Case,\n  run,\n  ShaderBuilder,\n} from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .fract from the result structure */\nfunction fractBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).fract`);\n}\n\n/* @returns an ShaderBuilder that evaluates frexp and returns .exp from the result structure */\nfunction expBuilder(): ShaderBuilder {\n  return basicExpressionBuilder(value => `frexp(${value}).exp`);\n}\n\n/* @returns a fract Case for a given vector input */\nfunction makeVectorCaseFract(v: number[]): Case {\n  v = v.map(quantizeToF32);\n  const fs = v.map(e => {\n    const result = [frexp(e).fract];\n    if (isSubnormalNumberF32(e)) {\n      result.push(frexp(0).fract);\n    }\n    return result;\n  });\n\n  const options = cartesianProduct(...fs);\n  const expected = anyOf(...options.map(o => toVector(o, f32)));\n  return { input: toVector(v, f32), expected };\n}\n\n/* @returns an exp Case for a given vector input */\nfunction makeVectorCaseExp(v: number[]): Case {\n  v = v.map(quantizeToF32);\n  const fs = v.map(e => {\n    const result = [frexp(e).exp];\n    if (isSubnormalNumberF32(e)) {\n      result.push(frexp(0).exp);\n    }\n    return result;\n  });\n\n  const options = cartesianProduct(...fs);\n  const expected = anyOf(...options.map(o => toVector(o, i32)));\n  return { input: toVector(v, f32), expected };\n}\n\nexport const d = makeCaseCache('frexp', {\n  f32_fract: () => {\n    const makeCase = (n: number): Case => {\n      n = quantizeToF32(n);\n      const expected = [f32(frexp(n).fract)];\n      if (isSubnormalNumberF32(n)) {\n        expected.push(f32(frexp(0).fract));\n      }\n      return { input: f32(n), expected: anyOf(...expected) };\n    };\n    return fullF32Range().map(makeCase);\n  },\n  f32_exp: () => {\n    const makeCase = (n: number): Case => {\n      n = quantizeToF32(n);\n      const expected = [i32(frexp(n).exp)];\n      if (isSubnormalNumberF32(n)) {\n        expected.push(i32(frexp(0).exp));\n      }\n      return { input: f32(n), expected: anyOf(...expected) };\n    };\n    return fullF32Range().map(makeCase);\n  },\n  f32_vec2_fract: () => {\n    return vectorF32Range(2).map(makeVectorCaseFract);\n  },\n  f32_vec2_exp: () => {\n    return vectorF32Range(2).map(makeVectorCaseExp);\n  },\n  f32_vec3_fract: () => {\n    return vectorF32Range(3).map(makeVectorCaseFract);\n  },\n  f32_vec3_exp: () => {\n    return vectorF32Range(3).map(makeVectorCaseExp);\n  },\n  f32_vec4_fract: () => {\n    return vectorF32Range(4).map(makeVectorCaseFract);\n  },\n  f32_vec4_exp: () => {\n    return vectorF32Range(4).map(makeVectorCaseExp);\n  },\n});\n\ng.test('f32_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_fract');\n    await run(t, fractBuilder(), [TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f32\n\nstruct __frexp_result {\n  fract : f32, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_exp');\n    await run(t, expBuilder(), [TypeF32], TypeI32, t.params, cases);\n  });\n\ng.test('f32_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result {\n  fract : vec2<f32>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_fract');\n    await run(t, fractBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f32>\n\nstruct __frexp_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec2_exp');\n    await run(t, expBuilder(), [TypeVec(2, TypeF32)], TypeVec(2, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_fract');\n    await run(t, fractBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f32>\n\nstruct __frexp_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec3_exp');\n    await run(t, expBuilder(), [TypeVec(3, TypeF32)], TypeVec(3, TypeI32), t.params, cases);\n  });\n\ng.test('f32_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_fract');\n    await run(t, fractBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeF32), t.params, cases);\n  });\n\ng.test('f32_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f32>\n\nstruct __frexp_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get('f32_vec4_exp');\n    await run(t, expBuilder(), [TypeVec(4, TypeF32)], TypeVec(4, TypeI32), t.params, cases);\n  });\n\ng.test('f16_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is f16\n\nstruct __frexp_result {\n  fract : f16, // fract part\n  exp : i32  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec2_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result {\n  fract : vec2<f16>, // fract part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec2_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec2<f16>\n\nstruct __frexp_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  exp : vec2<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec3_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec3_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec3<f16>\n\nstruct __frexp_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  exp : vec3<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec4_fract')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f16_vec4_exp')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\nT is vec4<f16>\n\nstruct __frexp_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  exp : vec4<i32>  // exponent part\n}\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,KAAK,QAAQ,gCAAgC;AACtD,SAASC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,QAAQ,mCAAmC;AACjG;AACEC,gBAAgB;AAChBC,KAAK;AACLC,YAAY;AACZC,oBAAoB;AACpBC,aAAa;AACbC,cAAc;AACT,6BAA6B;AACpC,SAASC,aAAa,QAAQ,qBAAqB;AACnD;AACEC,eAAe;AACfC,sBAAsB;;AAEtBC,GAAG;;AAEE,qBAAqB;;AAE5B,OAAO,MAAMC,CAAC,GAAGnB,aAAa,CAACC,OAAO,CAAC;;AAEvC;AACA,SAASmB,YAAY,GAAkB;EACrC,OAAOH,sBAAsB,CAAC,CAAAI,KAAK,KAAK,SAAQA,KAAM,SAAQ,CAAC;AACjE;;AAEA;AACA,SAASC,UAAU,GAAkB;EACnC,OAAOL,sBAAsB,CAAC,CAAAI,KAAK,KAAK,SAAQA,KAAM,OAAM,CAAC;AAC/D;;AAEA;AACA,SAASE,mBAAmB,CAACC,CAAW,EAAQ;EAC9CA,CAAC,GAAGA,CAAC,CAACC,GAAG,CAACZ,aAAa,CAAC;EACxB,MAAMa,EAAE,GAAGF,CAAC,CAACC,GAAG,CAAC,CAAAE,CAAC,KAAI;IACpB,MAAMC,MAAM,GAAG,CAAClB,KAAK,CAACiB,CAAC,CAAC,CAACE,KAAK,CAAC;IAC/B,IAAIjB,oBAAoB,CAACe,CAAC,CAAC,EAAE;MAC3BC,MAAM,CAACE,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC,CAACmB,KAAK,CAAC;IAC7B;IACA,OAAOD,MAAM;EACf,CAAC,CAAC;;EAEF,MAAMG,OAAO,GAAGtB,gBAAgB,CAAC,GAAGiB,EAAE,CAAC;EACvC,MAAMM,QAAQ,GAAG9B,KAAK,CAAC,GAAG6B,OAAO,CAACN,GAAG,CAAC,CAAAQ,CAAC,KAAI5B,QAAQ,CAAC4B,CAAC,EAAE9B,GAAG,CAAC,CAAC,CAAC;EAC7D,OAAO,EAAE+B,KAAK,EAAE7B,QAAQ,CAACmB,CAAC,EAAErB,GAAG,CAAC,EAAE6B,QAAQ,CAAC,CAAC;AAC9C;;AAEA;AACA,SAASG,iBAAiB,CAACX,CAAW,EAAQ;EAC5CA,CAAC,GAAGA,CAAC,CAACC,GAAG,CAACZ,aAAa,CAAC;EACxB,MAAMa,EAAE,GAAGF,CAAC,CAACC,GAAG,CAAC,CAAAE,CAAC,KAAI;IACpB,MAAMC,MAAM,GAAG,CAAClB,KAAK,CAACiB,CAAC,CAAC,CAACS,GAAG,CAAC;IAC7B,IAAIxB,oBAAoB,CAACe,CAAC,CAAC,EAAE;MAC3BC,MAAM,CAACE,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC,CAAC0B,GAAG,CAAC;IAC3B;IACA,OAAOR,MAAM;EACf,CAAC,CAAC;;EAEF,MAAMG,OAAO,GAAGtB,gBAAgB,CAAC,GAAGiB,EAAE,CAAC;EACvC,MAAMM,QAAQ,GAAG9B,KAAK,CAAC,GAAG6B,OAAO,CAACN,GAAG,CAAC,CAAAQ,CAAC,KAAI5B,QAAQ,CAAC4B,CAAC,EAAE7B,GAAG,CAAC,CAAC,CAAC;EAC7D,OAAO,EAAE8B,KAAK,EAAE7B,QAAQ,CAACmB,CAAC,EAAErB,GAAG,CAAC,EAAE6B,QAAQ,CAAC,CAAC;AAC9C;;AAEA,OAAO,MAAMK,CAAC,GAAGtB,aAAa,CAAC,OAAO,EAAE;EACtCuB,SAAS,EAAE,MAAM;IACf,MAAMC,QAAQ,GAAG,CAACC,CAAS,KAAW;MACpCA,CAAC,GAAG3B,aAAa,CAAC2B,CAAC,CAAC;MACpB,MAAMR,QAAQ,GAAG,CAAC7B,GAAG,CAACO,KAAK,CAAC8B,CAAC,CAAC,CAACX,KAAK,CAAC,CAAC;MACtC,IAAIjB,oBAAoB,CAAC4B,CAAC,CAAC,EAAE;QAC3BR,QAAQ,CAACF,IAAI,CAAC3B,GAAG,CAACO,KAAK,CAAC,CAAC,CAAC,CAACmB,KAAK,CAAC,CAAC;MACpC;MACA,OAAO,EAAEK,KAAK,EAAE/B,GAAG,CAACqC,CAAC,CAAC,EAAER,QAAQ,EAAE9B,KAAK,CAAC,GAAG8B,QAAQ,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,OAAOrB,YAAY,EAAE,CAACc,GAAG,CAACc,QAAQ,CAAC;EACrC,CAAC;EACDE,OAAO,EAAE,MAAM;IACb,MAAMF,QAAQ,GAAG,CAACC,CAAS,KAAW;MACpCA,CAAC,GAAG3B,aAAa,CAAC2B,CAAC,CAAC;MACpB,MAAMR,QAAQ,GAAG,CAAC5B,GAAG,CAACM,KAAK,CAAC8B,CAAC,CAAC,CAACJ,GAAG,CAAC,CAAC;MACpC,IAAIxB,oBAAoB,CAAC4B,CAAC,CAAC,EAAE;QAC3BR,QAAQ,CAACF,IAAI,CAAC1B,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC0B,GAAG,CAAC,CAAC;MAClC;MACA,OAAO,EAAEF,KAAK,EAAE/B,GAAG,CAACqC,CAAC,CAAC,EAAER,QAAQ,EAAE9B,KAAK,CAAC,GAAG8B,QAAQ,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,OAAOrB,YAAY,EAAE,CAACc,GAAG,CAACc,QAAQ,CAAC;EACrC,CAAC;EACDG,cAAc,EAAE,MAAM;IACpB,OAAO5B,cAAc,CAAC,CAAC,CAAC,CAACW,GAAG,CAACF,mBAAmB,CAAC;EACnD,CAAC;EACDoB,YAAY,EAAE,MAAM;IAClB,OAAO7B,cAAc,CAAC,CAAC,CAAC,CAACW,GAAG,CAACU,iBAAiB,CAAC;EACjD,CAAC;EACDS,cAAc,EAAE,MAAM;IACpB,OAAO9B,cAAc,CAAC,CAAC,CAAC,CAACW,GAAG,CAACF,mBAAmB,CAAC;EACnD,CAAC;EACDsB,YAAY,EAAE,MAAM;IAClB,OAAO/B,cAAc,CAAC,CAAC,CAAC,CAACW,GAAG,CAACU,iBAAiB,CAAC;EACjD,CAAC;EACDW,cAAc,EAAE,MAAM;IACpB,OAAOhC,cAAc,CAAC,CAAC,CAAC,CAACW,GAAG,CAACF,mBAAmB,CAAC;EACnD,CAAC;EACDwB,YAAY,EAAE,MAAM;IAClB,OAAOjC,cAAc,CAAC,CAAC,CAAC,CAACW,GAAG,CAACU,iBAAiB,CAAC;EACjD;AACF,CAAC,CAAC;;AAEFhB,CAAC,CAAC6B,IAAI,CAAC,WAAW,CAAC;AAChBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,WAAW,CAAC;EACtC,MAAMvC,GAAG,CAACqC,CAAC,EAAEnC,YAAY,EAAE,EAAE,CAACd,OAAO,CAAC,EAAEA,OAAO,EAAEiD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACnE,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,SAAS,CAAC;AACdC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,SAAS,CAAC;EACpC,MAAMvC,GAAG,CAACqC,CAAC,EAAEjC,UAAU,EAAE,EAAE,CAAChB,OAAO,CAAC,EAAEC,OAAO,EAAEgD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACjE,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMvC,GAAG,CAACqC,CAAC,EAAEnC,YAAY,EAAE,EAAE,CAACZ,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,EAAEiD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AAC3F,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,cAAc,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,cAAc,CAAC;EACzC,MAAMvC,GAAG,CAACqC,CAAC,EAAEjC,UAAU,EAAE,EAAE,CAACd,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,EAAEgD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzF,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMvC,GAAG,CAACqC,CAAC,EAAEnC,YAAY,EAAE,EAAE,CAACZ,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,EAAEiD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AAC3F,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,cAAc,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,cAAc,CAAC;EACzC,MAAMvC,GAAG,CAACqC,CAAC,EAAEjC,UAAU,EAAE,EAAE,CAACd,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,EAAEgD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzF,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMvC,GAAG,CAACqC,CAAC,EAAEnC,YAAY,EAAE,EAAE,CAACZ,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,EAAEiD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AAC3F,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,cAAc,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtDsC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,KAAK,GAAG,MAAMnB,CAAC,CAACoB,GAAG,CAAC,cAAc,CAAC;EACzC,MAAMvC,GAAG,CAACqC,CAAC,EAAEjC,UAAU,EAAE,EAAE,CAACd,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,EAAED,OAAO,CAAC,EAAEgD,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzF,CAAC,CAAC;;AAEJrC,CAAC,CAAC6B,IAAI,CAAC,WAAW,CAAC;AAChBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,SAAS,CAAC;AACdC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,cAAc,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,cAAc,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,gBAAgB,CAAC;AACrBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE;;AAElBvC,CAAC,CAAC6B,IAAI,CAAC,cAAc,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;AACF;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACE;;AACAC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAErC,eAAe,CAAC,CAAC;AACtD0C,aAAa,EAAE"}