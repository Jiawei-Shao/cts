{"version":3,"file":"limit_utils.js","names":["kUnitCaseParamsBuilder","makeTestGroup","keysOf","getGPU","assert","range","reorder","kLimitInfo","GPUTestBase","CreatePipelineTypes","createRenderPipeline","createRenderPipelineWithFragmentStage","createComputePipeline","kCreatePipelineTypes","CreatePipelineAsyncTypes","createRenderPipelineAsync","createRenderPipelineAsyncWithFragmentStage","createComputePipelineAsync","kCreatePipelineAsyncTypes","RenderEncoderTypes","render","renderBundle","kRenderEncoderTypes","EncoderTypes","compute","kEncoderTypes","BindGroupTests","sameGroup","differentGroups","kBindGroupTests","BindingCombinations","vertex","fragment","vertexAndFragmentWithPossibleVertexStageOverflow","vertexAndFragmentWithPossibleFragmentStageOverflow","kBindingCombinations","getPipelineTypeForBindingCombination","bindingCombination","getPipelineAsyncTypeForBindingCombination","getBindGroupIndex","bindGroupTest","i","getWGSLBindings","order","storageDefinitionWGSLSnippetFn","numBindings","id","join","getPerStageWGSLForBindingCombinationImpl","bodyFn","extraWGSL","getPerStageWGSLForBindingCombination","usageWGSLSnippetFn","set","getPerStageWGSLForBindingCombinationStorageTextures","LimitModes","defaultLimit","maxLimit","kLimitModes","TestValues","atLimit","overLimit","kTestValueKeys","getTestValue","limit","testValue","MinimumTestValues","underLimit","kMinimumTestValueKeys","LimitValueTests","atDefault","underDefault","betweenDefaultAndMaximum","atMaximum","overMaximum","kLimitValueTestKeys","getLimitValue","maximumLimit","limitValueTest","MinimumLimitValueTests","overDefault","betweenDefaultAndMinimum","atMinimum","underMinimum","kMinimumLimitValueTestKeys","getDefaultLimit","default","kMinimumLimits","Set","kLimitBaseParams","combine","beginSubcases","kMinimumLimitBaseParams","LimitTestsImpl","_adapter","_device","undefined","init","gpu","requestAdapter","adapter","limits","Number","isNaN","device","requestDeviceWithLimits","requiredLimits","shouldReject","requestDevice","getDefaultOrMaximumLimit","limitMode","_getDeviceWithSpecificLimit","requestedLimit","extraLimits","extraLimitStr","Object","entries","extraLimit","has","actualLimit","expect","_getDeviceWithRequestedLimit","_testThenDestroyDevice","deviceAndLimits","fn","shouldError","pushErrorScope","validationError","popErrorScope","outOfMemoryError","internalError","message","destroy","testDeviceWithSpecificLimits","deviceLimitValue","testDeviceWithRequestedLimits","limitTest","testValueName","inputs","expectGPUErrorAsync","filter","msg","returnValue","Promise","error","shouldRejectConditionally","expectedName","p","shouldResolve","e","expectValidationError","expectNoValidationError","testForValidationErrorWithPossibleOutOfMemoryError","result","getGroupIndexWGSLForPipelineType","pipelineType","groupIndex","getBindingIndexWGSLForPipelineType","bindingIndex","createPipeline","createPipelineType","module","layout","entryPoint","targets","format","createPipelineAsync","createPipelineAsyncType","_getGPURenderCommandsMixin","encoderType","buffer","trackForCleanup","createBuffer","size","usage","GPUBufferUsage","UNIFORM","texture","createTexture","GPUTextureUsage","RENDER_ATTACHMENT","createBindGroupLayout","binding","visibility","GPUShaderStage","VERTEX","bindGroup","createBindGroup","resource","encoder","createCommandEncoder","mixin","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","prep","end","test","finish","createRenderBundleEncoder","colorFormats","testGPURenderCommandsMixin","_getGPUBindingCommandsMixin","COMPUTE","beginComputePass","testGPUBindingCommandsMixin","makeLimitTestFixture","LimitTests","makeLimitTestGroup","description","g"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/limit_utils.ts"],"sourcesContent":["import { kUnitCaseParamsBuilder } from '../../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { getGPU } from '../../../../../common/util/navigator_gpu.js';\nimport { assert, range, reorder, ReorderOrder } from '../../../../../common/util/util.js';\nimport { kLimitInfo } from '../../../../capability_info.js';\nimport { GPUTestBase } from '../../../../gpu_test.js';\n\ntype GPUSupportedLimit = keyof GPUSupportedLimits;\n\nconst CreatePipelineTypes = {\n  createRenderPipeline: true,\n  createRenderPipelineWithFragmentStage: true,\n  createComputePipeline: true,\n};\nexport type CreatePipelineType = keyof typeof CreatePipelineTypes;\nexport const kCreatePipelineTypes = keysOf(CreatePipelineTypes);\n\nconst CreatePipelineAsyncTypes = {\n  createRenderPipelineAsync: true,\n  createRenderPipelineAsyncWithFragmentStage: true,\n  createComputePipelineAsync: true,\n};\nexport type CreatePipelineAsyncType = keyof typeof CreatePipelineAsyncTypes;\nexport const kCreatePipelineAsyncTypes = keysOf(CreatePipelineAsyncTypes);\n\nconst RenderEncoderTypes = {\n  render: true,\n  renderBundle: true,\n};\nexport type RenderEncoderType = keyof typeof RenderEncoderTypes;\nexport const kRenderEncoderTypes = keysOf(RenderEncoderTypes);\n\nconst EncoderTypes = {\n  compute: true,\n  render: true,\n  renderBundle: true,\n};\nexport type EncoderType = keyof typeof EncoderTypes;\nexport const kEncoderTypes = keysOf(EncoderTypes);\n\nconst BindGroupTests = {\n  sameGroup: true,\n  differentGroups: true,\n};\nexport type BindGroupTest = keyof typeof BindGroupTests;\nexport const kBindGroupTests = keysOf(BindGroupTests);\n\nconst BindingCombinations = {\n  vertex: true,\n  fragment: true,\n  vertexAndFragmentWithPossibleVertexStageOverflow: true,\n  vertexAndFragmentWithPossibleFragmentStageOverflow: true,\n  compute: true,\n};\nexport type BindingCombination = keyof typeof BindingCombinations;\nexport const kBindingCombinations = keysOf(BindingCombinations);\n\nexport function getPipelineTypeForBindingCombination(bindingCombination: BindingCombination) {\n  switch (bindingCombination) {\n    case 'vertex':\n      return 'createRenderPipeline';\n    case 'fragment':\n    case 'vertexAndFragmentWithPossibleVertexStageOverflow':\n    case 'vertexAndFragmentWithPossibleFragmentStageOverflow':\n      return 'createRenderPipelineWithFragmentStage';\n    case 'compute':\n      return 'createComputePipeline';\n  }\n}\n\nexport function getPipelineAsyncTypeForBindingCombination(bindingCombination: BindingCombination) {\n  switch (bindingCombination) {\n    case 'vertex':\n      return 'createRenderPipelineAsync';\n    case 'fragment':\n    case 'vertexAndFragmentWithPossibleVertexStageOverflow':\n    case 'vertexAndFragmentWithPossibleFragmentStageOverflow':\n      return 'createRenderPipelineAsyncWithFragmentStage';\n    case 'compute':\n      return 'createComputePipelineAsync';\n  }\n}\n\nfunction getBindGroupIndex(bindGroupTest: BindGroupTest, i: number) {\n  switch (bindGroupTest) {\n    case 'sameGroup':\n      return 0;\n    case 'differentGroups':\n      return i % 3;\n  }\n}\n\nfunction getWGSLBindings(\n  order: ReorderOrder,\n  bindGroupTest: BindGroupTest,\n  storageDefinitionWGSLSnippetFn: (i: number, j: number) => string,\n  numBindings: number,\n  id: number\n) {\n  return reorder(\n    order,\n    range(\n      numBindings,\n      i =>\n        `@group(${getBindGroupIndex(\n          bindGroupTest,\n          i\n        )}) @binding(${i}) ${storageDefinitionWGSLSnippetFn(i, id)};`\n    )\n  ).join('\\n');\n}\n\nexport function getPerStageWGSLForBindingCombinationImpl(\n  bindingCombination: BindingCombination,\n  order: ReorderOrder,\n  bindGroupTest: BindGroupTest,\n  storageDefinitionWGSLSnippetFn: (i: number, j: number) => string,\n  bodyFn: (numBindings: number, set: number) => string,\n  numBindings: number,\n  extraWGSL = ''\n) {\n  switch (bindingCombination) {\n    case 'vertex':\n      return `\n        ${extraWGSL}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings, 0)}\n        @vertex fn mainVS() -> @builtin(position) vec4f {\n          ${bodyFn(numBindings, 0)}\n          return vec4f(0);\n        }\n      `;\n    case 'fragment':\n      return `\n        ${extraWGSL}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings, 0)}\n        @vertex fn mainVS() -> @builtin(position) vec4f {\n          return vec4f(0);\n        }\n        @fragment fn mainFS() -> @location(0) vec4f {\n          ${bodyFn(numBindings, 0)}\n          return vec4f(0);\n        }\n      `;\n    case 'vertexAndFragmentWithPossibleVertexStageOverflow': {\n      return `\n        ${extraWGSL}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings, 0)}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings - 1, 1)}\n        @vertex fn mainVS() -> @builtin(position) vec4f {\n          ${bodyFn(numBindings, 0)}\n          return vec4f(0);\n        }\n        @fragment fn mainFS() -> @location(0) vec4f {\n          ${bodyFn(numBindings - 1, 1)}\n          return vec4f(0);\n        }\n      `;\n    }\n    case 'vertexAndFragmentWithPossibleFragmentStageOverflow': {\n      return `\n        ${extraWGSL}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings - 1, 0)}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings, 1)}\n        @vertex fn mainVS() -> @builtin(position) vec4f {\n          ${bodyFn(numBindings - 1, 0)}\n          return vec4f(0);\n        }\n        @fragment fn mainFS() -> @location(0) vec4f {\n          ${bodyFn(numBindings, 1)}\n          return vec4f(0);\n        }\n      `;\n    }\n    case 'compute':\n      return `\n        ${extraWGSL}\n        ${getWGSLBindings(order, bindGroupTest, storageDefinitionWGSLSnippetFn, numBindings, 0)}\n        @group(3) @binding(0) var<storage, read_write> d: f32;\n        @compute @workgroup_size(1) fn main() {\n          ${bodyFn(numBindings, 0)}\n        }\n      `;\n      break;\n  }\n}\n\nexport function getPerStageWGSLForBindingCombination(\n  bindingCombination: BindingCombination,\n  order: ReorderOrder,\n  bindGroupTest: BindGroupTest,\n  storageDefinitionWGSLSnippetFn: (i: number, j: number) => string,\n  usageWGSLSnippetFn: (i: number, j: number) => string,\n  numBindings: number,\n  extraWGSL = ''\n) {\n  return getPerStageWGSLForBindingCombinationImpl(\n    bindingCombination,\n    order,\n    bindGroupTest,\n    storageDefinitionWGSLSnippetFn,\n    (numBindings: number, set: number) =>\n      `${range(numBindings, i => usageWGSLSnippetFn(i, set)).join('\\n')}`,\n    numBindings,\n    extraWGSL\n  );\n}\n\nexport function getPerStageWGSLForBindingCombinationStorageTextures(\n  bindingCombination: BindingCombination,\n  order: ReorderOrder,\n  bindGroupTest: BindGroupTest,\n  storageDefinitionWGSLSnippetFn: (i: number, j: number) => string,\n  usageWGSLSnippetFn: (i: number, j: number) => string,\n  numBindings: number,\n  extraWGSL = ''\n) {\n  return getPerStageWGSLForBindingCombinationImpl(\n    bindingCombination,\n    order,\n    bindGroupTest,\n    storageDefinitionWGSLSnippetFn,\n    (numBindings: number, set: number) => {\n      return bindingCombination === 'compute'\n        ? `${range(numBindings, i => usageWGSLSnippetFn(i, set)).join('\\n')};`\n        : `${range(numBindings, i => usageWGSLSnippetFn(i, set)).join('\\n')};`;\n    },\n    numBindings,\n    extraWGSL\n  );\n}\n\n// MAINTENANCE_TODO: rename LimitsModes to MaximumLimitsModes and update its derivatives.\nconst LimitModes = {\n  defaultLimit: true,\n  maxLimit: true,\n};\nexport type LimitMode = keyof typeof LimitModes;\nexport const kLimitModes = keysOf(LimitModes);\nexport type LimitsRequest = Record<string, LimitMode>;\n\n// MAINTENANCE_TODO: rename TestValues to MaximumTestValues and update its derivatives.\nexport const TestValues = {\n  atLimit: true,\n  overLimit: true,\n};\nexport type TestValue = keyof typeof TestValues;\nexport const kTestValueKeys = keysOf(TestValues);\n\nexport function getTestValue(limit: number, testValue: TestValue) {\n  switch (testValue) {\n    case 'atLimit':\n      return limit;\n    case 'overLimit':\n      return limit + 1;\n  }\n}\n\nexport const MinimumTestValues = {\n  atLimit: true,\n  underLimit: true,\n};\nexport type MinimumTestValue = keyof typeof MinimumTestValues;\nexport const kMinimumTestValueKeys = keysOf(MinimumTestValues);\n\n// MAINTENANCE_TODO: rename LimitValueTests to MaximumLimitValueTests and update its derivatives.\nexport const LimitValueTests = {\n  atDefault: true,\n  underDefault: true,\n  betweenDefaultAndMaximum: true,\n  atMaximum: true,\n  overMaximum: true,\n};\nexport type LimitValueTest = keyof typeof LimitValueTests;\nexport const kLimitValueTestKeys = keysOf(LimitValueTests);\n\nexport function getLimitValue(\n  defaultLimit: number,\n  maximumLimit: number,\n  limitValueTest: LimitValueTest\n) {\n  switch (limitValueTest) {\n    case 'atDefault':\n      return defaultLimit;\n    case 'underDefault':\n      return defaultLimit - 1;\n    case 'betweenDefaultAndMaximum':\n      return ((defaultLimit + maximumLimit) / 2) | 0;\n    case 'atMaximum':\n      return maximumLimit;\n    case 'overMaximum':\n      return maximumLimit + 1;\n  }\n}\n\nexport const MinimumLimitValueTests = {\n  atDefault: true,\n  overDefault: true,\n  betweenDefaultAndMinimum: true,\n  atMinimum: true,\n  underMinimum: true,\n};\nexport type MinimumLimitValueTest = keyof typeof MinimumLimitValueTests;\nexport const kMinimumLimitValueTestKeys = keysOf(MinimumLimitValueTests);\n\nexport function getDefaultLimit(limit: GPUSupportedLimit): number {\n  return (kLimitInfo as Record<string, { default: number }>)[limit].default;\n}\n\n// MAINTENANCE_TODO: rename maximumLimit here and in LimitTestImpl to adapterLimit\nexport type DeviceAndLimits = {\n  device: GPUDevice;\n  defaultLimit: number;\n  maximumLimit: number;\n  requestedLimit: number;\n  actualLimit: number;\n};\n\nexport type SpecificLimitTestInputs = DeviceAndLimits & {\n  testValue: number;\n  shouldError: boolean;\n};\n\nexport type LimitTestInputs = SpecificLimitTestInputs & {\n  testValueName: TestValue;\n};\n\nconst kMinimumLimits = new Set<GPUSupportedLimit>([\n  'minUniformBufferOffsetAlignment',\n  'minStorageBufferOffsetAlignment',\n]);\n\n/**\n * Adds the default parameters to a limit test\n */\nexport const kLimitBaseParams = kUnitCaseParamsBuilder\n  .combine('limitTest', kLimitValueTestKeys)\n  .beginSubcases()\n  .combine('testValueName', kTestValueKeys);\n\nexport const kMinimumLimitBaseParams = kUnitCaseParamsBuilder\n  .combine('limitTest', kMinimumLimitValueTestKeys)\n  .beginSubcases()\n  .combine('testValueName', kMinimumTestValueKeys);\n\nexport class LimitTestsImpl extends GPUTestBase {\n  _adapter: GPUAdapter | null = null;\n  _device: GPUDevice | undefined = undefined;\n  limit: GPUSupportedLimit = '' as GPUSupportedLimit;\n  defaultLimit = 0;\n  maximumLimit = 0;\n\n  async init() {\n    await super.init();\n    const gpu = getGPU();\n    this._adapter = await gpu.requestAdapter();\n    const limit = this.limit;\n    this.defaultLimit = getDefaultLimit(limit);\n    this.maximumLimit = this.adapter.limits[limit] as number;\n    assert(!Number.isNaN(this.defaultLimit));\n    assert(!Number.isNaN(this.maximumLimit));\n  }\n\n  get adapter(): GPUAdapter {\n    assert(this._adapter !== undefined);\n    return this._adapter!;\n  }\n\n  get device(): GPUDevice {\n    assert(this._device !== undefined, 'device is only valid in _testThenDestroyDevice callback');\n    return this._device;\n  }\n\n  async requestDeviceWithLimits(\n    adapter: GPUAdapter,\n    requiredLimits: Record<string, number>,\n    shouldReject: boolean\n  ) {\n    if (shouldReject) {\n      this.shouldReject('OperationError', adapter.requestDevice({ requiredLimits }));\n      return undefined;\n    } else {\n      return await adapter.requestDevice({ requiredLimits });\n    }\n  }\n\n  // MAINTENANCE_TODO: rename to getDefaultOrAdapterLimit\n  getDefaultOrMaximumLimit(limit: GPUSupportedLimit, limitMode: LimitMode) {\n    switch (limitMode) {\n      case 'defaultLimit':\n        return getDefaultLimit(limit);\n      case 'maxLimit':\n        return this.adapter.limits[limit];\n    }\n  }\n\n  /**\n   * Gets a device with the adapter a requested limit and checks that that limit\n   * is correct or that the device failed to create if the requested limit is\n   * beyond the maximum supported by the device.\n   */\n  async _getDeviceWithSpecificLimit(\n    requestedLimit: number,\n    extraLimits?: LimitsRequest\n  ): Promise<DeviceAndLimits | undefined> {\n    const { adapter, limit, maximumLimit, defaultLimit } = this;\n\n    const requiredLimits: Record<string, number> = {};\n    requiredLimits[limit] = requestedLimit;\n\n    if (extraLimits) {\n      for (const [extraLimitStr, limitMode] of Object.entries(extraLimits)) {\n        const extraLimit = extraLimitStr as GPUSupportedLimit;\n        requiredLimits[extraLimit] =\n          limitMode === 'defaultLimit'\n            ? getDefaultLimit(extraLimit)\n            : (adapter.limits[extraLimit] as number);\n      }\n    }\n\n    const shouldReject = kMinimumLimits.has(limit)\n      ? requestedLimit < maximumLimit\n      : requestedLimit > maximumLimit;\n\n    const device = await this.requestDeviceWithLimits(adapter, requiredLimits, shouldReject);\n    const actualLimit = (device ? device.limits[limit] : 0) as number;\n\n    if (shouldReject) {\n      this.expect(!device);\n    } else {\n      if (kMinimumLimits.has(limit)) {\n        if (requestedLimit <= defaultLimit) {\n          this.expect(actualLimit === requestedLimit);\n        } else {\n          this.expect(actualLimit === defaultLimit);\n        }\n      } else {\n        if (requestedLimit <= defaultLimit) {\n          this.expect(actualLimit === defaultLimit);\n        } else {\n          this.expect(actualLimit === requestedLimit);\n        }\n      }\n    }\n\n    return device ? { device, defaultLimit, maximumLimit, requestedLimit, actualLimit } : undefined;\n  }\n\n  /**\n   * Gets a device with the adapter a requested limit and checks that that limit\n   * is correct or that the device failed to create if the requested limit is\n   * beyond the maximum supported by the device.\n   */\n  async _getDeviceWithRequestedLimit(\n    limitValueTest: LimitValueTest,\n    extraLimits?: LimitsRequest\n  ): Promise<DeviceAndLimits | undefined> {\n    const { defaultLimit, maximumLimit } = this;\n\n    const requestedLimit = getLimitValue(defaultLimit, maximumLimit, limitValueTest);\n    return this._getDeviceWithSpecificLimit(requestedLimit, extraLimits);\n  }\n\n  /**\n   * Call the given function and check no WebGPU errors are leaked\n   */\n  async _testThenDestroyDevice(\n    deviceAndLimits: DeviceAndLimits,\n    testValue: number,\n    fn: (inputs: SpecificLimitTestInputs) => void | Promise<void>\n  ) {\n    assert(!this._device);\n\n    const { device, actualLimit } = deviceAndLimits;\n    this._device = device;\n\n    const shouldError = kMinimumLimits.has(this.limit)\n      ? testValue < actualLimit\n      : testValue > actualLimit;\n\n    device.pushErrorScope('internal');\n    device.pushErrorScope('out-of-memory');\n    device.pushErrorScope('validation');\n\n    await fn({ ...deviceAndLimits, testValue, shouldError });\n\n    const validationError = await device.popErrorScope();\n    const outOfMemoryError = await device.popErrorScope();\n    const internalError = await device.popErrorScope();\n\n    this.expect(!validationError, validationError?.message || '');\n    this.expect(!outOfMemoryError, outOfMemoryError?.message || '');\n    this.expect(!internalError, internalError?.message || '');\n\n    device.destroy();\n    this._device = undefined;\n  }\n\n  /**\n   * Creates a device with a specific limit.\n   * If the limit of over the maximum we expect an exception\n   * If the device is created then we call a test function, checking\n   * that the function does not leak any GPU errors.\n   */\n  async testDeviceWithSpecificLimits(\n    deviceLimitValue: number,\n    testValue: number,\n    fn: (inputs: SpecificLimitTestInputs) => void | Promise<void>,\n    extraLimits?: LimitsRequest\n  ) {\n    assert(!this._device);\n\n    const deviceAndLimits = await this._getDeviceWithSpecificLimit(deviceLimitValue, extraLimits);\n    // If we request over the limit requestDevice will throw\n    if (!deviceAndLimits) {\n      return;\n    }\n\n    await this._testThenDestroyDevice(deviceAndLimits, testValue, fn);\n  }\n\n  /**\n   * Creates a device with the limit defined by LimitValueTest.\n   * If the limit of over the maximum we expect an exception\n   * If the device is created then we call a test function, checking\n   * that the function does not leak any GPU errors.\n   */\n  async testDeviceWithRequestedLimits(\n    limitTest: LimitValueTest,\n    testValueName: TestValue,\n    fn: (inputs: LimitTestInputs) => void | Promise<void>,\n    extraLimits?: LimitsRequest\n  ) {\n    assert(!this._device);\n\n    const deviceAndLimits = await this._getDeviceWithRequestedLimit(limitTest, extraLimits);\n    // If we request over the limit requestDevice will throw\n    if (!deviceAndLimits) {\n      return;\n    }\n\n    const { actualLimit } = deviceAndLimits;\n    const testValue = getTestValue(actualLimit, testValueName);\n\n    await this._testThenDestroyDevice(\n      deviceAndLimits,\n      testValue,\n      async (inputs: SpecificLimitTestInputs) => {\n        await fn({ ...inputs, testValueName });\n      }\n    );\n  }\n\n  /**\n   * Calls a function that expects a GPU error if shouldError is true\n   */\n  // MAINTENANCE_TODO: Remove this duplicated code with GPUTest if possible\n  async expectGPUErrorAsync<R>(\n    filter: GPUErrorFilter,\n    fn: () => R,\n    shouldError: boolean = true,\n    msg = ''\n  ): Promise<R> {\n    const { device } = this;\n\n    device.pushErrorScope(filter);\n    const returnValue = fn();\n    if (returnValue instanceof Promise) {\n      await returnValue;\n    }\n\n    const error = await device.popErrorScope();\n    this.expect(\n      !!error === shouldError,\n      `${error?.message || 'no error when one was expected'}: ${msg}`\n    );\n\n    return returnValue;\n  }\n\n  /** Expect that the provided promise rejects, with the provided exception name. */\n  async shouldRejectConditionally(\n    expectedName: string,\n    p: Promise<unknown>,\n    shouldReject: boolean,\n    msg?: string\n  ): Promise<void> {\n    if (shouldReject) {\n      this.shouldReject(expectedName, p, msg);\n    } else {\n      this.shouldResolve(p, msg);\n    }\n\n    // We need to explicitly wait for the promise because the device may be\n    // destroyed immediately after returning from this function.\n    try {\n      await p;\n    } catch (e) {\n      //\n    }\n  }\n\n  /**\n   * Calls a function that expects a validation error if shouldError is true\n   */\n  async expectValidationError<R>(fn: () => R, shouldError: boolean = true, msg = ''): Promise<R> {\n    return this.expectGPUErrorAsync('validation', fn, shouldError, msg);\n  }\n\n  /**\n   * Calls a function that expects to not generate a validation error\n   */\n  async expectNoValidationError<R>(fn: () => R, msg = ''): Promise<R> {\n    return this.expectGPUErrorAsync('validation', fn, false, msg);\n  }\n\n  /**\n   * Calls a function that might expect a validation error.\n   * if shouldError is true then expect a validation error,\n   * if shouldError is false then ignore out-of-memory errors.\n   */\n  async testForValidationErrorWithPossibleOutOfMemoryError<R>(\n    fn: () => R,\n    shouldError: boolean = true,\n    msg = ''\n  ): Promise<R> {\n    const { device } = this;\n\n    if (!shouldError) {\n      device.pushErrorScope('out-of-memory');\n      const result = fn();\n      await device.popErrorScope();\n      return result;\n    }\n\n    // Validation should fail before out-of-memory so there is no need to check\n    // for out-of-memory here.\n    device.pushErrorScope('validation');\n    const returnValue = fn();\n    const validationError = await device.popErrorScope();\n\n    this.expect(\n      !!validationError,\n      `${validationError?.message || 'no error when one was expected'}: ${msg}`\n    );\n\n    return returnValue;\n  }\n\n  getGroupIndexWGSLForPipelineType(\n    pipelineType: CreatePipelineType | CreatePipelineAsyncType,\n    groupIndex: number\n  ) {\n    switch (pipelineType) {\n      case 'createRenderPipeline':\n      case 'createRenderPipelineAsync':\n        return `\n          @group(${groupIndex}) @binding(0) var<uniform> v: f32;\n          @vertex fn mainVS() -> @builtin(position) vec4f {\n            return vec4f(v);\n          }\n        `;\n      case 'createRenderPipelineWithFragmentStage':\n      case 'createRenderPipelineAsyncWithFragmentStage':\n        return `\n          @group(${groupIndex}) @binding(0) var<uniform> v: f32;\n          @vertex fn mainVS() -> @builtin(position) vec4f {\n            return vec4f(v);\n          }\n          @fragment fn mainFS() -> @location(0) vec4f {\n            return vec4f(1);\n          }\n        `;\n      case 'createComputePipeline':\n      case 'createComputePipelineAsync':\n        return `\n          @group(${groupIndex}) @binding(0) var<uniform> v: f32;\n          @compute @workgroup_size(1) fn main() {\n            _ = v;\n          }\n        `;\n        break;\n    }\n  }\n\n  getBindingIndexWGSLForPipelineType(\n    pipelineType: CreatePipelineType | CreatePipelineAsyncType,\n    bindingIndex: number\n  ) {\n    switch (pipelineType) {\n      case 'createRenderPipeline':\n      case 'createRenderPipelineAsync':\n        return `\n          @group(0) @binding(${bindingIndex}) var<uniform> v: f32;\n          @vertex fn mainVS() -> @builtin(position) vec4f {\n            return vec4f(v);\n          }\n        `;\n      case 'createRenderPipelineWithFragmentStage':\n      case 'createRenderPipelineAsyncWithFragmentStage':\n        return `\n          @group(0) @binding(${bindingIndex}) var<uniform> v: f32;\n          @vertex fn mainVS() -> @builtin(position) vec4f {\n            return vec4f(v);\n          }\n          @fragment fn mainFS() -> @location(0) vec4f {\n            return vec4f(1);\n          }\n        `;\n      case 'createComputePipeline':\n      case 'createComputePipelineAsync':\n        return `\n          @group(0) @binding(${bindingIndex}) var<uniform> v: f32;\n          @compute @workgroup_size(1) fn main() {\n            _ = v;\n          }\n        `;\n        break;\n    }\n  }\n\n  createPipeline(createPipelineType: CreatePipelineType, module: GPUShaderModule) {\n    const { device } = this;\n\n    switch (createPipelineType) {\n      case 'createRenderPipeline':\n        return device.createRenderPipeline({\n          layout: 'auto',\n          vertex: {\n            module,\n            entryPoint: 'mainVS',\n          },\n        });\n        break;\n      case 'createRenderPipelineWithFragmentStage':\n        return device.createRenderPipeline({\n          layout: 'auto',\n          vertex: {\n            module,\n            entryPoint: 'mainVS',\n          },\n          fragment: {\n            module,\n            entryPoint: 'mainFS',\n            targets: [{ format: 'rgba8unorm' }],\n          },\n        });\n        break;\n      case 'createComputePipeline':\n        return device.createComputePipeline({\n          layout: 'auto',\n          compute: {\n            module,\n            entryPoint: 'main',\n          },\n        });\n        break;\n    }\n  }\n\n  createPipelineAsync(createPipelineAsyncType: CreatePipelineAsyncType, module: GPUShaderModule) {\n    const { device } = this;\n\n    switch (createPipelineAsyncType) {\n      case 'createRenderPipelineAsync':\n        return device.createRenderPipelineAsync({\n          layout: 'auto',\n          vertex: {\n            module,\n            entryPoint: 'mainVS',\n          },\n        });\n      case 'createRenderPipelineAsyncWithFragmentStage':\n        return device.createRenderPipelineAsync({\n          layout: 'auto',\n          vertex: {\n            module,\n            entryPoint: 'mainVS',\n          },\n          fragment: {\n            module,\n            entryPoint: 'mainFS',\n            targets: [{ format: 'rgba8unorm' }],\n          },\n        });\n      case 'createComputePipelineAsync':\n        return device.createComputePipelineAsync({\n          layout: 'auto',\n          compute: {\n            module,\n            entryPoint: 'main',\n          },\n        });\n    }\n  }\n\n  /**\n   * Creates an GPURenderCommandsMixin setup with some initial state.\n   */\n  _getGPURenderCommandsMixin(encoderType: RenderEncoderType) {\n    const { device } = this;\n\n    switch (encoderType) {\n      case 'render': {\n        const buffer = this.trackForCleanup(\n          device.createBuffer({\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM,\n          })\n        );\n\n        const texture = this.trackForCleanup(\n          device.createTexture({\n            size: [1, 1],\n            format: 'rgba8unorm',\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\n          })\n        );\n\n        const layout = device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.VERTEX,\n              buffer: {},\n            },\n          ],\n        });\n\n        const bindGroup = device.createBindGroup({\n          layout,\n          entries: [\n            {\n              binding: 0,\n              resource: { buffer },\n            },\n          ],\n        });\n\n        const encoder = device.createCommandEncoder();\n        const mixin = encoder.beginRenderPass({\n          colorAttachments: [\n            {\n              view: texture.createView(),\n              loadOp: 'clear',\n              storeOp: 'store',\n            },\n          ],\n        });\n\n        return {\n          mixin,\n          bindGroup,\n          prep() {\n            mixin.end();\n          },\n          test() {\n            encoder.finish();\n          },\n        };\n        break;\n      }\n\n      case 'renderBundle': {\n        const buffer = this.trackForCleanup(\n          device.createBuffer({\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM,\n          })\n        );\n\n        const layout = device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.VERTEX,\n              buffer: {},\n            },\n          ],\n        });\n\n        const bindGroup = device.createBindGroup({\n          layout,\n          entries: [\n            {\n              binding: 0,\n              resource: { buffer },\n            },\n          ],\n        });\n\n        const mixin = device.createRenderBundleEncoder({\n          colorFormats: ['rgba8unorm'],\n        });\n\n        return {\n          mixin,\n          bindGroup,\n          prep() {},\n          test() {\n            mixin.finish();\n          },\n        };\n        break;\n      }\n    }\n  }\n\n  /**\n   * Tests a method on GPURenderCommandsMixin\n   * The function will be called with the mixin.\n   */\n  async testGPURenderCommandsMixin(\n    encoderType: RenderEncoderType,\n    fn: ({ mixin }: { mixin: GPURenderCommandsMixin }) => void,\n    shouldError: boolean,\n    msg = ''\n  ) {\n    const { mixin, prep, test } = this._getGPURenderCommandsMixin(encoderType);\n    fn({ mixin });\n    prep();\n\n    await this.expectValidationError(test, shouldError, msg);\n  }\n\n  /**\n   * Creates GPUBindingCommandsMixin setup with some initial state.\n   */\n  _getGPUBindingCommandsMixin(encoderType: EncoderType) {\n    const { device } = this;\n\n    switch (encoderType) {\n      case 'compute': {\n        const buffer = this.trackForCleanup(\n          device.createBuffer({\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM,\n          })\n        );\n\n        const layout = device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.COMPUTE,\n              buffer: {},\n            },\n          ],\n        });\n\n        const bindGroup = device.createBindGroup({\n          layout,\n          entries: [\n            {\n              binding: 0,\n              resource: { buffer },\n            },\n          ],\n        });\n\n        const encoder = device.createCommandEncoder();\n        const mixin = encoder.beginComputePass();\n        return {\n          mixin,\n          bindGroup,\n          prep() {\n            mixin.end();\n          },\n          test() {\n            encoder.finish();\n          },\n        };\n        break;\n      }\n      case 'render':\n        return this._getGPURenderCommandsMixin('render');\n      case 'renderBundle':\n        return this._getGPURenderCommandsMixin('renderBundle');\n    }\n  }\n\n  /**\n   * Tests a method on GPUBindingCommandsMixin\n   * The function pass will be called with the mixin and a bindGroup\n   */\n  async testGPUBindingCommandsMixin(\n    encoderType: EncoderType,\n    fn: ({ bindGroup }: { mixin: GPUBindingCommandsMixin; bindGroup: GPUBindGroup }) => void,\n    shouldError: boolean,\n    msg = ''\n  ) {\n    const { mixin, bindGroup, prep, test } = this._getGPUBindingCommandsMixin(encoderType);\n    fn({ mixin, bindGroup });\n    prep();\n\n    await this.expectValidationError(test, shouldError, msg);\n  }\n}\n\n/**\n * Makes a new LimitTest class so that the tests have access to `limit`\n */\nfunction makeLimitTestFixture(limit: GPUSupportedLimit): typeof LimitTestsImpl {\n  class LimitTests extends LimitTestsImpl {\n    limit = limit;\n  }\n\n  return LimitTests;\n}\n\n/**\n * This is to avoid repeating yourself (D.R.Y.) as I ran into that issue multiple times\n * writing these tests where I'd copy a test, need to rename a limit in 3-4 places,\n * forget one place, and then spend 20-30 minutes wondering why the test was failing.\n */\nexport function makeLimitTestGroup(limit: GPUSupportedLimit) {\n  const description = `API Validation Tests for ${limit}.`;\n  const g = makeTestGroup(makeLimitTestFixture(limit));\n  return { g, description, limit };\n}\n"],"mappings":"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"}